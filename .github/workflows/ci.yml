name: CI

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  ORT_DYLIB_PATH: /tmp/onnxruntime/lib/libonnxruntime.so
  RUST_LOG: sb_event_worker=trace

jobs:
  cargo-fmt:
    name: "cargo fmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup show
      - run: ./scripts/fmt.sh

  cargo-clippy:
    name: "cargo clippy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup show
      - uses: Swatinem/rust-cache@v2
      - run: ./scripts/clippy.sh

  cargo-test:
    name: "cargo test"
    runs-on: ubuntu-latest
    steps:
      - name: Remove unwanted software
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force

          sudo apt-get remove --purge -y man-db
          sudo apt-get remove 'clang-13*' 'clang-14*' 'clang-15*' 'llvm-13*' 'llvm-14*' 'llvm-15*' 'lld-13*' 'lld-14*' 'lld-15*'

      - uses: actions/checkout@v4
      - run: rustup show
      - uses: Swatinem/rust-cache@v2

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: ".env"

      - name: Install ONNX Runtime Library
        run: ./scripts/install_onnx.sh ${{ env.ONNXRUNTIME_VERSION }} linux x64 /tmp/onnxruntime

      - name: Install S3 credentials for testing
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        run: |
          cd crates/fs/tests
          echo "S3FS_TEST_SUPABASE_STORAGE=true" >> .env
          echo "S3FS_TEST_APP_NAME=edge_runtime_github_ci" >> .env
          echo "S3FS_TEST_BUCKET_NAME=$BUCKET_NAME" >> .env
          echo "S3FS_TEST_ENDPOINT_URL=$ENDPOINT_URL" >> .env
          echo "S3FS_TEST_REGION=$REGION" >> .env
          echo "S3FS_TEST_ACCESS_KEY_ID=$ACCESS_KEY_ID" >> .env
          echo "S3FS_TEST_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY" >> .env
        shell: bash
        env:
          BUCKET_NAME: ${{ secrets.SUPABASE_S3_BUCKET_NAME }}
          ENDPOINT_URL: ${{ secrets.SUPABASE_S3_ENTRYPOINT }}
          REGION: ${{ secrets.SUPABASE_S3_REGION }}
          ACCESS_KEY_ID: ${{ secrets.SUPABASE_S3_ACCESS_KEY }}
          SECRET_ACCESS_KEY: ${{ secrets.SUPABASE_S3_SECRET }}

      - run: ./scripts/test.sh --features base/tracing

